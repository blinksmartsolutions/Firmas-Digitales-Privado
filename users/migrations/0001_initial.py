# Generated by Django 4.2 on 2024-10-18 14:05

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UsuariosTrime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('Nombre_Usuario', models.CharField(max_length=60, verbose_name='Nombre')),
                ('Apellido_Usuario', models.CharField(max_length=60, verbose_name='Apellido')),
                ('Cedula_Usuario', models.CharField(max_length=18, unique=True, verbose_name='CURP')),
                ('Edad_Usuario_new', models.DateField(null=True, verbose_name='Fecha de Nacimiento')),
                ('Genero', models.CharField(choices=[('MASCULINO', 'MASCULINO'), ('FEMENINO', 'FEMENINO')], default='MASCULINO', max_length=60, verbose_name='Género')),
                ('telefono_Usuario', models.CharField(max_length=18, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Teléfono')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('fecha_modificacion', models.DateField(auto_now=True, verbose_name='Fecha de Modificacion')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios ',
            },
        ),
    ]
